c
ac = ActiveCard.first
ActiveCard.first
ActiveCard.all.min(:created_at)
ActiveCard.all
ActiveCard
cards
cards.min(:created_at)
cards.min(:next_recall)
cards
c
deck.cards
deck.pending_cards
deck
next_recall
c
@test
@test_card.deck_id
@test_card.deck
@test_card.active_card
@test_card
c
cards
pending_cards
c
@test_card.answered_correctly = test_card_params[:answered_correctly]
test_card_params
c
@test_card.answered_correctly
c
exit
params
test_card_params
@test_card.answered_correctly
@test_card
@test
continue
@test.cards.second.state
@test.cards.first.state
@test.cards.first
@test.cards_count
@test.cards.pending
@test.cards
@test.finished?
c
test_card_params[:user_answer]
test_card_params
c
continue
@test.next_random_card
@test
continue
@test.valid?
@test
exit
active_card.attributes.with_indifferent_access.slice(*ATTRIBUTES_FROM_ACTIVE_CARD)
active_card.attributes.with_indifferent_access.slice(ATTRIBUTES_FROM_ACTIVE_CARD*)
ATTRIBUTES_FROM_ACTIVE_CARD*
ATTRIBUTES_FROM_ACTIVE_CARD
active_card.attributes.with_indifferent_access.slice(:question)
active_card.attributes.with_indifferent_access.slice(ATTRIBUTES_FROM_ACTIVE_CARD)
active_card.attributes.with_indifferent_access
active_card.attributes
active_card
c
test_card
c
test_card
active_card
test_card
